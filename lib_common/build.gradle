apply plugin: 'com.android.library'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

kapt {
    arguments {
        arg("moduleName", project.getName())
    }
}
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        AROUTER_MODULE_NAME: project.getName(),
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true"]
            }
        }
        ndk {            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_6 4', 'arm64-v8a'
        }


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

}

project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = [
                "-Xjsr305=strict",
                "-progressive"
        ]
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["kotlin"]
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["PersistentCookieJar"]
//    api rootProject.ext.dependencies["rxjava2"]
//    api rootProject.ext.dependencies["adapter-rxjava2"]
    api rootProject.ext.dependencies["converter_gson"]
    api rootProject.ext.dependencies["rxandroid"]
    api Config.dependencies.adapter_rxjava3
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["photo_view"]
    api rootProject.ext.dependencies["picker_view"]
    api rootProject.ext.dependencies["event_bus"]
    api rootProject.ext.dependencies["statusbarutil"]
    api rootProject.ext.dependencies["swipebacklayout"]
    api rootProject.ext.dependencies["bottom_navigation_bar"]
    api rootProject.ext.dependencies["arouter-api"]
    api rootProject.ext.dependencies["easypermissions"]
    api rootProject.ext.dependencies["BasePopup"]
    api rootProject.ext.dependencies["BRVAH"]
    api rootProject.ext.dependencies["crashreport_upgrade"]
    api rootProject.ext.dependencies["nativecrashreport"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["agentweb"]
    api Config.dependencies.room
    kapt Config.dependencies.room_compiler
    api Config.dependencies.paging_runtime_ktx
    api Config.dependencies.lifecycle
    api Config.dependencies.lifecycle_viewmodel
    api Config.dependencies.lifecycle_livedata
    api Config.dependencies.navigation_fragment
    api Config.dependencies.navigation_ui
    api Config.dependencies.autodispose2
    api Config.dependencies.autodispose_lifecycle2
    api Config.dependencies.autodisposex_lifecycle2
    api Config.dependencies.autodispose_java
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["testrunner"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]
}
